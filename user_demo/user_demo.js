// Generated by CoffeeScript 1.5.0
(function() {
  var User, UserView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  User = (function(_super) {

    __extends(User, _super);

    function User() {
      User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.workflow = {
      initial: 'guest',
      events: [
        {
          name: 'login',
          from: 'guest',
          to: 'user'
        }, {
          name: 'logout',
          from: 'user',
          to: 'guest'
        }
      ]
    };

    User.prototype.initialize = function() {
      return _.extend(this, new Backbone.Workflow(this));
    };

    return User;

  })(Backbone.Model);

  UserView = Backbone.View.extend({
    templates: {
      guest: {
        selector: "#login",
        tpl: _.template("<button class='loginbtn'>Login</button>")
      },
      user: {
        selector: "#user_info",
        tpl: _.template("<button class='logoutbtn'>Hello User</button>")
      }
    },
    states: {
      "user": "show",
      "guest": "hide"
    },
    initialize: function() {
      var _this = this;
      return this.model.bind('transition:to', function() {
        return _this.render();
      });
    },
    render: function() {
      var $new, selector, template, _ref;
      _ref = this.templates[this.model.get('workflow_state')], template = _ref.tpl, selector = _ref.selector;
      $new = $(template(this.model.toJSON()));
      this.$el.remove();
      $(selector).html($new);
      this.setElement($new);
      return this;
    }
  });

  $(function() {
    var user, userView;
    user = new User();
    userView = new UserView({
      model: user
    });
    userView.render();
    $(".loginbtn").live("click", function() {
      return user.triggerEvent("login");
    });
    return $(".logoutbtn").live("click", function() {
      return user.triggerEvent("logout");
    });
  });

}).call(this);
